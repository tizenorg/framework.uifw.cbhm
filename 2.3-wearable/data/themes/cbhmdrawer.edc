/*
 * Copyright (c) 2011 Samsung Electronics Co., Ltd All Rights Reserved
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */
collections {

#include "scroller.edc"
#include "popup_layout.edc"

// Clipboard
#define CLIPBOARD_H_INC 480
#define CLIPBOARD_LANDSCAPE_H_INC 400
#define CLIPBOARD_PANEL_TOP_PADDING_INC 0
#define CLIPBOARD_PANEL_LEFT_PADDING_INC 20 // also used for RIGHT_PADDING
#define CLIPBOARD_PANEL_H_INC 60
#define CLIPBOARD_CLOSE_BTN_BG_W_INC (CLIPBOARD_PANEL_LEFT_PADDING_INC + CLIPBOARD_CLOSE_BTN_W_INC + CLIPBOARD_PANEL_LEFT_PADDING_INC)
#define CLIPBOARD_CLOSE_BTN_W_INC 72
#define CLIPBOARD_CLOSE_BTN_H_INC 72
#define CLIPBOARD_FUNCTION_BTN_MIN_W_INC 60
#define CLIPBOARD_FUNCTION_BTN_MAX_W_INC 225
#define CLIPBOARD_FUNCTION_BTN_LANDSCAPE_MAX_W_INC 505
#define CLIPBOARD_FUNCTION_BTN_LEFT_SIZE_INC 16 // also used for BTN_RIGHT
#define CLIPBOARD_FUNCTION_BTN_TEXT_MAX_W_INC (CLIPBOARD_FUNCTION_BTN_MAX_W_INC - CLIPBOARD_FUNCTION_BTN_LEFT_SIZE_INC - CLIPBOARD_FUNCTION_BTN_LEFT_SIZE_INC)
#define CLIPBOARD_FUNCTION_BTN_TEXT_LANDSCAPE_MAX_W_INC (CLIPBOARD_FUNCTION_BTN_LANDSCAPE_MAX_W_INC - CLIPBOARD_FUNCTION_BTN_LEFT_SIZE_INC - CLIPBOARD_FUNCTION_BTN_LEFT_SIZE_INC)
#define CLIPBOARD_FUNCTION_BTN_H_INC 60

#define CLIPBOARD_CONTENT_TOP_LEFT_PADDING_INC 0 0
#define CLIPBOARD_CONTENT_BOTTOM_RIGHT_PADDING_INC 500 0
#define CLIPBOARD_CONTENT_COLOR_INC 62 62 62 255

#define CLIPBOARD_TITLE_FONT_SIZE_INC 34
#define CLIPBOARD_TITLE_FONT_COLOR_INC 250 250 250 255
#define CLIPBOARD_FUNCTION_FONT_SIZE_INC 32
#define CLIPBOARD_FUNCTION_FONT_COLOR_INC 250 250 250 255
#define CLIPBOARD_FUNCTION_FONT_COLOR_DIM_INC 107 108 109 255

#define CLIPBOARD_TITLE_TOP_LEFT_PADDING_INC CLIPBOARD_PANEL_LEFT_PADDING_INC 50
#define CLIPBOARD_FUNCTION_BTN_RIGHT_PADDING_INC (CLIPBOARD_PANEL_LEFT_PADDING_INC + CLIPBOARD_FUNCTION_BTN_LEFT_SIZE_INC)

#define GRID_ITEM_W_INC 340
#define GRID_ITEM_H_INC 178

#define GRID_ITEM_BG_LEFT_PADDING_INC 6
#define GRID_ITEM_BG_RIGHT_PADDING_INC 8
#define GRID_ITEM_BG_TOP_PADDING_INC 8
#define GRID_ITEM_BG_BOTTOM_PADDING_INC 6

#define GRID_TEXT_ITEM_BG_LEFT_PADDING_INC 10
#define GRID_TEXT_ITEM_BG_RIGHT_PADDING_INC 10
#define GRID_TEXT_ITEM_BG_TOP_PADDING_INC 10
#define GRID_TEXT_ITEM_BG_BOTTOM_PADDING_INC 10

#define GRID_ITEM_OUTER_LINE_SIZE_INC 3
#define GRID_TEXT_ITEM_INNER_LINE_SIZE_INC 10
#define GRID_TEXT_ITEM_LEFT_PADDING_INC 10
#define GRID_TEXT_ITEM_TOP_PADDING_INC 10
#define GRID_COMBINED_ITEM_LEFT_PADDING_INC 6
#define GRID_COMBINED_ITEM_TOP_PADDING_INC 6

#define GRID_COMBINED_ITEM_PADDING_INC 4

#define GRID_ITEM_DELETE_BTN_TOP_PADDING_INC 11 // also used for RIGHT_PADDING
#define GRID_ITEM_DELETE_BTN_SIZE_INC 54 54
#define GRID_ITEM_LOCK_BTN_SIZE_INC 54 54

#define GRID_TEXT_ITEM_COLOR_INC 237 233 208 255

#define GRID_ITEM_BG_W_INC (GRID_ITEM_W_INC + GRID_ITEM_BG_LEFT_PADDING_INC + GRID_ITEM_BG_RIGHT_PADDING_INC)
#define GRID_ITEM_BG_H_INC (GRID_ITEM_H_INC + GRID_ITEM_BG_TOP_PADDING_INC + GRID_ITEM_BG_BOTTOM_PADDING_INC)
#define GRID_TEXT_ITEM_W_INC (GRID_ITEM_W_INC - GRID_TEXT_ITEM_LEFT_PADDING_INC - GRID_TEXT_ITEM_LEFT_PADDING_INC - GRID_TEXT_ITEM_BG_LEFT_PADDING_INC - GRID_TEXT_ITEM_BG_RIGHT_PADDING_INC)
#define GRID_TEXT_ITEM_H_INC (GRID_ITEM_H_INC - GRID_TEXT_ITEM_TOP_PADDING_INC - GRID_TEXT_ITEM_TOP_PADDING_INC - GRID_TEXT_ITEM_BG_TOP_PADDING_INC - GRID_TEXT_ITEM_BG_BOTTOM_PADDING_INC)
#define GRID_IMAGE_ITEM_W_INC (GRID_ITEM_W_INC - GRID_ITEM_OUTER_LINE_SIZE_INC - GRID_ITEM_OUTER_LINE_SIZE_INC)
#define GRID_IMAGE_ITEM_H_INC (GRID_ITEM_H_INC - GRID_ITEM_OUTER_LINE_SIZE_INC - GRID_ITEM_OUTER_LINE_SIZE_INC)
#define GRID_COMBINED_ITEM_W_INC (GRID_ITEM_W_INC - GRID_ITEM_OUTER_LINE_SIZE_INC - GRID_ITEM_OUTER_LINE_SIZE_INC - GRID_COMBINED_ITEM_LEFT_PADDING_INC - GRID_COMBINED_ITEM_LEFT_PADDING_INC)
#define GRID_COMBINED_ITEM_IMAGE_H_INC 80

#define SCROLLER_BOTTOM_RIGHT_PADDING_INC 8
#define SCROLLER_TOP_PADDING_INC 11
#define SCROLLER_TOP_LANDSCAPE_PADDING_INC 52

#define GENGRID_ITEM_SELECT_VI_EFFECT \
} \
description { state: "pressed" 0.0; \
   inherit: "default" 0.0; \
   map { \
      on: 1; \
      perspective: "persp1"; \
      smooth: 0; \
   } \
} \
description { state: "selected" 0.0; \
   inherit: "default" 0.0; \
   map { \
      on: 1; \
      perspective: "persp"; \
      smooth: 1; \
   }

#define GENGRID_PROGRAM_ITEM_SELECT_VI_EFFECT( TARGET ) \
   program { name: "vi_pressed"; \
      action: STATE_SET "pressed" 0.0; \
      TARGET \
      after: "vi_zoom_in"; \
   } \
   program { name: "vi_zoom_in"; \
      action: STATE_SET "selected" 0.0; \
      TARGET \
      transition: SIN_FAC 0.167 1.1; \
   } \
   program { name: "vi_zoom_out"; \
      action: STATE_SET "pressed" 0.0; \
      TARGET \
      transition: SIN_FAC 0.167 1.1; \
      after: "vi_default"; \
   } \
   program { name: "vi_default"; \
      action: STATE_SET "default" 0.0; \
      TARGET \
   }


   sounds {
      sample {
         name: "touch_sound" RAW;
         source: "button-pressed.wav";
      }
   }

   group { name: "cbhmdrawer";
      images {
         image: "B12_panel_title_bg.#.png" COMP;
         image: "B12_panel_title_bg_line.#.png" COMP;
         image: "B12_panel_button.#.png" COMP;
         image: "B12_panel_button_line.#.png" COMP;
         image: "B12_panel_button_dim.png" COMP;
         image: "B12_panel_icon_close.png" COMP;
         image: "b_clipboard_title_delete.png" COMP;
      }
      data.item: "clipboard_height" CLIPBOARD_H_INC;
      data.item: "clipboard_landscape_height" CLIPBOARD_LANDSCAPE_H_INC;
      data.item: "grid_item_bg_w" GRID_ITEM_BG_W_INC;
      data.item: "grid_item_bg_h" GRID_ITEM_BG_H_INC;
      data.item: "grid_image_item_w" GRID_IMAGE_ITEM_W_INC;
      data.item: "grid_image_item_h" GRID_IMAGE_ITEM_H_INC;

  //    script {
     //    public g_landscape = 0; // Flag for landscape mode
     // }

      parts {
         part { name: "background";
            type: RECT;
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 1.0; }
              color: 68 68 68 255;

            }
         }
         //title back ground
         part { name: "background/title";
            type: RECT;
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               fixed: 0 1;
               align: 0.0 0.0;
               min: 200 60;
               rel1 { relative: 0.0 0.0; to_x: "background"; to_y: "background"; }
               rel2 { relative: 1.0 0.0; to_x: "background"; to_y: "background"; }
               color: 0 31 63 255;
            }
         }
         //left margin
          part { name: "title_text_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
             //  fixed: 1 0;
               align: 0.0 0.0;
               min: 20 0;
               rel1 { relative: 0.0 0.0; to_x: "background/title"; to_y: "background/title"; }
               rel2 { relative: 0.0 1.0; to_x: "background/title"; to_y: "background/title"; }
            }
         }
          part { name: "panel_title";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               text {
                  font: "Tizen:style=Bold";
                  size: 34;
                  min: 0 1;
                  max: 1 0;
                  align: 0.5 0.5;
                  text_class: "tizen";
               }
              align: 0.0 0.0;
               max: 170 60;
               rel1 { relative: 1.0 0.0; to_x: "title_text_left_padding"; to_y: "title_text_left_padding";}
               rel2 { relative: 0.0 1.0; to_x: "title_text_right_padding"; to_y: "title_text_right_padding" ; }
            }
         }
         //right margin
         part { name: "title_text_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
             //  fixed: 1 0;
               align: 1.0 1.0;
               min: 20 0;
               rel1 { relative: 1.0 0.0; to_x: "background/title"; to_y: "background/title"; }
               rel2 { relative: 1.0 1.0; to_x: "background/title"; to_y: "background/title"; }
            }
         }

//trash image
         part { name: "trash_image";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
             //  fixed: 1 0;
              // align: 1.0 0.5;
               min: 52 0;
               rel1 { relative: 0.0 0.0; to_x: "title_text_right_padding"; to_y: "title_text_right_padding"; offset: -52 0; }
               rel2 { relative: 0.0 1.0; to_x: "title_text_right_padding"; to_y: "title_text_right_padding"; }
               image { normal: "b_clipboard_title_delete.png"; }
            }
         }
         part { name: "historyitems_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: CLIPBOARD_CONTENT_TOP_LEFT_PADDING_INC;
               max: CLIPBOARD_CONTENT_TOP_LEFT_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "background/title"; }
               rel2 { relative: 0.0 1.0; to: "background/title"; }
            }
         }
         part { name: "historyitems_bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: CLIPBOARD_CONTENT_BOTTOM_RIGHT_PADDING_INC;
               max: CLIPBOARD_CONTENT_BOTTOM_RIGHT_PADDING_INC;
               rel1 { relative: 1.0 1.0; to: "background"; }
               rel2 { relative: 1.0 1.0; to: "background"; }
            }
         }
         part { name: "historyitems";
            type: SWALLOW;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 1.0; to: "historyitems_top_left_padding"; }
               rel2 { relative: 1.0 1.0; to: "historyitems_bottom_right_padding"; }
               visible: 1;
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
      }
      programs {
         program { name: "historyitems_hide";
            signal: "elm,state,hide,historyitems";
            source: "elm";
            action: STATE_SET "hidden" 0.0;
            target: "historyitems";
         }
         program { name: "historyitems_show";
            signal: "elm,state,show,historyitems";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "historyitems";
         }
         }
}


   group { name: "elm/scroller/base/grid_cbhm";
      alias: "elm/gengrid/base/cbhm";
      inherit: "elm/scroller/base/list_effect";

      images {
          image: "B12_panel_scroll_bar.png" COMP;
      }
      parts {
         part { name: "padding.left";
            type: SPACER;
            scale:1 ;
            description { state: "default" 0.0;
               min: SCROLLER_BOTTOM_RIGHT_PADDING_INC SCROLLER_TOP_PADDING_INC;
               max: SCROLLER_BOTTOM_RIGHT_PADDING_INC SCROLLER_TOP_PADDING_INC;
               rel1 {
                  relative: 0.0 0.0;
                  to: "bg";
               }
               rel2.to: "bg";
               fixed: 1 1;
               align: 0.0 0.0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 SCROLLER_TOP_LANDSCAPE_PADDING_INC;
               max: 0 SCROLLER_TOP_LANDSCAPE_PADDING_INC;
            }
         }
         part { name: "padding.right";
            type: SPACER;
            scale:1 ;
            description { state: "default" 0.0;
               min: SCROLLER_BOTTOM_RIGHT_PADDING_INC 0;
               max: SCROLLER_BOTTOM_RIGHT_PADDING_INC 0;
               rel1 {
                   relative: 1.0 1.0;
                   to: "bg";
               }
               rel2.to: "bg";
               fixed: 1 1;
               align: 1.0 1.0;
            }
         }
         part { name: "elm.swallow.content";
            description { state: "default" 0.0;
               rel1 {
                   relative: 1.0 1.0;
                   to: "padding.left";
                   offset: 0 0;
               }
               rel2 {
                   relative: 0.0 0.0;
                   to: "padding.right";
                   offset: -1 -1;
               }
            }
         }
         part { name: "elm.dragable.hbar";
            description { state: "default" 0.0;
               min: SCROLLER_DEFAULT_SCROLLBAR_HBAR_MIN_SIZE_INC;
               max: SCROLLER_DEFAULT_SCROLLBAR_HBAR_MAX_SIZE_INC;
               image {
                  normal: "B12_panel_scroll_bar.png";
                  border: SCROLLER_DEFAULT_SCROLLBAR_HBAR_IMAGE_BORDER;
                  border_scale: 1;
                  middle: DEFAULT;
               }
            }
         }
      }
      programs {
         program { name: "change_to_landscape";
            script {
               new st[32];
               new Float:vl;

               if (!get_int(g_landscape)) {
                  get_state(PART:"padding.left", st, 32, vl);
                  if (!strcmp(st, "default")) {
                     set_state(PART:"padding.left", "landscape", 0.0);
                  }
                  set_int(g_landscape, 1);
               }
            }
         }
         program { name: "change_to_portrait";
            script {
               new st[32];
               new Float:vl;

               if (get_int(g_landscape)) {
                  get_state(PART:"padding.left", st, 32, vl);
                  if (!strcmp(st, "landscape")) {
                     set_state(PART:"padding.left", "default", 0.0);
                  }
                  set_int(g_landscape, 0);
               }
            }
         }
         program { name: "landscape_mode";
            source: "elm";
            signal: "elm,state,orient,90";
            after: "change_to_landscape";
         }
         program { name: "landscape_mode2";
            source: "elm";
            signal: "elm,state,orient,270";
            after: "change_to_landscape";
         }
         program { name: "portrait_mode";
            source: "elm";
            signal: "elm,state,orient,0";
            after: "change_to_portrait";
         }
         program { name: "portrait_mode2";
            source: "elm";
            signal: "elm,state,orient,180";
            after: "change_to_portrait";
         }
      }
   }

   group { name: "elm/gengrid/item/clipboard/image_style/default";
      data.item: "contents" "elm.swallow.content";

      images {
         image: "B12_thumbnail_bg.#.png" COMP;
         image: "B12_thumbnail_bg_line.#.png" COMP;
         image: "B12_button_delete.png" COMP;
         image: "B12_button_delete_press.png" COMP;
         image: "B12_icon_lock.png" COMP;
      }

      parts {
         part { name: "persp";
            type: RECT;
            description { state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               fixed: 1 1;
               align: 0.5 0.5;
               color: 0 0 0 0;
               visible: 1;
               perspective {
                  zplane: -70;
                  focal: 1000;
               }
            }
         }
         part { name: "persp1";
            type: RECT;
            description { state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               fixed: 1 1;
               align: 0.5 0.5;
               color: 0 0 0 0;
               visible: 1;
               perspective {
                  zplane: 0;
                  focal: 1000;
               }
            }
         }
         part { name: "bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "item_outer_bg";
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "item_outer_bg_top_left_padding"; }
               rel2 { relative: 1.0 1.0; to: "item_outer_bg_bottom_right_padding"; }
               color: 249 249 249 255;
               image.normal: "B12_thumbnail_bg.#.png";
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "item_outer_bg_line";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2.to: "item_outer_bg";
               rel1.to: "item_outer_bg";
               color: 249 249 249 255;
               image.normal: "B12_thumbnail_bg_line.#.png";
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "item_outer_bg_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               max: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.content"; }
               rel2 { relative: 0.0 0.0; to: "elm.swallow.content"; }
            }
         }
         part { name: "item_outer_bg_bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               max: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               rel1 { relative: 1.0 1.0; to: "elm.swallow.content"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.content"; }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 1;
               max: GRID_IMAGE_ITEM_W_INC GRID_IMAGE_ITEM_H_INC;
               rel1 { relative: 0.5 0.5; to: "bg"; }
               rel2 { relative: 0.5 0.5; to: "bg"; }
               GENGRID_ITEM_SELECT_VI_EFFECT

            }
         }
         part { name: "elm.rect.dim";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 0 0 0 200;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "icon_lock/img";
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1 { relative: 0.5 0.5; to: "item_outer_bg"; }
               rel2 { relative: 0.5 0.5; to: "item_outer_bg"; }
               align: 0.5 0.5;
               fixed: 1 1;
               min: GRID_ITEM_LOCK_BTN_SIZE_INC;
               max: GRID_ITEM_LOCK_BTN_SIZE_INC;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_icon_lock.png";
               }
            }
         }
         part { name: "delbtn_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_ITEM_DELETE_BTN_TOP_PADDING_INC GRID_ITEM_DELETE_BTN_TOP_PADDING_INC;
               max: GRID_ITEM_DELETE_BTN_TOP_PADDING_INC GRID_ITEM_DELETE_BTN_TOP_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "item_outer_bg_top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "item_outer_bg_top_left_padding"; }
            }
         }
         part { name: "delbtn";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "delbtn_top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "delbtn_top_left_padding"; }
               align: 0.0 0.0;
               fixed: 1 1;
               min: GRID_ITEM_DELETE_BTN_SIZE_INC;
               max: GRID_ITEM_DELETE_BTN_SIZE_INC;
            }
         }
         part { name: "delbtn/img";
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1.to: "delbtn";
               rel2.to: "delbtn";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_button_delete.png";
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_button_delete_press.png";
               }
            }
         }
      }
      programs {
         program { name: "selected";
            signal: "elm,state,selected";
            source: "elm";
            script {
               new st[31], st2[31];
               new Float:vl, Float:vl2;
               get_state(PART:"delbtn/img", st, 30, vl);
               get_state(PART:"elm.rect.dim", st2, 30, vl2);
            //   if (!strcmp(st, "default") && !strcmp(st2, "default"))
             //   run_program(PROGRAM:"vi_pressed");
            }
         }
         program { name: "unselected";
            signal: "elm,state,unselected";
            source: "elm";
            script {
               new st[31], st2[31];
               new Float:vl, Float:vl2;
               get_state(PART:"delbtn/img", st, 30, vl);
               get_state(PART:"elm.rect.dim", st2, 30, vl2);
            //   if (!strcmp(st, "default") && !strcmp(st2, "default"))
              //    run_program(PROGRAM:"vi_zoom_out");
            }
         }
         /*GENGRID_PROGRAM_ITEM_SELECT_VI_EFFECT(
            target: "bg";
            target: "item_outer_bg";
            target: "item_outer_bg_line";
            target: "elm.swallow.content";
         )*/
         program { name: "mouse_down";
            signal: "mouse,down,1";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "show"))
                  set_state(PART:"delbtn/img", "pressed", 0.0);
            }
         }
         program { name: "mouse_out";
            signal: "mouse,out";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "pressed"))
                  set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "mouse_up";
            signal: "mouse,up,1";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "pressed"))
                  set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "play_sound_delbtn";
            signal: "mouse,clicked,1";
            source: "delbtn/img";
            action: PLAY_SAMPLE "touch_sound" 1.0;
         }
         program { name: "play_sound_item";
            signal: "mouse,clicked,1";
            source: "item_outer_bg";
            script {
               new st[31], st2[31];
               new Float:vl, Float:vl2;
               get_state(PART:"delbtn/img", st, 30, vl);
               get_state(PART:"elm.rect.dim", st2, 30, vl2);
               if (!strcmp(st, "default") && !strcmp(st2, "default"))
                  play_sample("touch_sound", 1.0);
            }
         }
         program { name: "show_lock_icon";
            source: "elm";
            signal: "elm,state,show,lockicon";
            script {
               set_state(PART:"icon_lock/img", "show", 0.0);
            }
         }
         program { name: "hide_lock_icon";
            source: "elm";
            signal: "elm,state,hide,lockicon";
            script {
               set_state(PART:"icon_lock/img", "hide", 0.0);
            }
         }
         program { name: "show_delbtn";
            source: "elm";
            signal: "elm,state,show,delbtn";
            script {
               set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "hide_delbtn";
            source: "elm";
            signal: "elm,state,hide,delbtn";
            script {
               set_state(PART:"delbtn/img", "default", 0.0);
            }
         }
         program { name: "show_dim";
            source: "elm";
            signal: "elm,state,show,dim";
            action: STATE_SET "show" 0.0;
            target: "elm.rect.dim";
         }
         program { name: "hide_dim";
            source: "elm";
            signal: "elm,state,hide,dim";
            action: STATE_SET "default" 0.0;
            target: "elm.rect.dim";
         }
      }
   }

   group { name: "elm/gengrid/item/clipboard/text_style/default";
      data.item: "texts" "elm.text";

      images {
         image: "B12_memo_bg.#.png" COMP;
         image: "B12_memo_bg_line.#.png" COMP;
         image: "B12_button_delete.png" COMP;
         image: "B12_button_delete_press.png" COMP;
         image: "B12_icon_lock.png" COMP;
      }

      styles {
         style { name: "clipboard_01_style";
            base: "font=Tizen:style=Regular font_size=28 color=#686868FF align=left wrap=mixed text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "clipboard_01_style_pressed";
            base: "font=Tizen:style=Regular font_size=28 color=#686868FF align=left wrap=mixed text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }

      parts {
         part { name: "persp";
            type: RECT;
            description { state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               fixed: 1 1;
               align: 0.5 0.5;
               color: 0 0 0 0;
               visible: 1;
               perspective {
                  zplane: -70;
                  focal: 1000;
               }
            }
         }
         part { name: "persp1";
            type: RECT;
            description { state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               fixed: 1 1;
               align: 0.5 0.5;
               color: 0 0 0 0;
               visible: 1;
               perspective {
                  zplane: 0;
                  focal: 1000;
               }
            }
         }
         part { name: "bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               //GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               //fixed: 1 1;
               align: 0.0 0.0;
               //min: GRID_TEXT_ITEM_BG_LEFT_PADDING_INC GRID_TEXT_ITEM_BG_TOP_PADDING_INC;
               //max: GRID_TEXT_ITEM_BG_LEFT_PADDING_INC GRID_TEXT_ITEM_BG_TOP_PADDING_INC;
               min :10 10;
               max :10 10;
               rel1 { relative: 0.0 0.0; to: "bg"; }
               rel2 { relative: 0.0 0.0; to: "bg"; }
            }
         }
         part { name: "bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
              // fixed: 1 1;
               align: 1.0 1.0;
               min :10 10;
               max :10 10;
               rel1 { relative: 1.0 1.0; to: "bg"; }
               rel2 { relative: 1.0 1.0; to: "bg"; }
            }
         }
         part { name: "item_outer_bg";
            type: RECT;
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 1.0; to: "top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "bottom_right_padding"; }
              // GENGRID_ITEM_SELECT_VI_EFFECT
               color: 242 237 213 255;
            }
         }
         part { name: "item_inner_bg_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               max: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "item_outer_bg"; }
               rel2 { relative: 0.0 0.0; to: "item_outer_bg"; }
            }
         }
         part { name: "item_inner_bg_bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               max: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               rel1 { relative: 1.0 1.0; to: "item_outer_bg"; }
               rel2 { relative: 1.0 1.0; to: "item_outer_bg"; }
            }
         }
         // inner white line to "0"
         part { name: "item_inner_bg";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 1.0; to: "item_inner_bg_top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "item_inner_bg_bottom_right_padding"; }
               //GENGRID_ITEM_SELECT_VI_EFFECT
               color: 0 0 255 0;
            }
         }
         part { name: "item_bg_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: GRID_TEXT_ITEM_INNER_LINE_SIZE_INC GRID_TEXT_ITEM_INNER_LINE_SIZE_INC;
               max: GRID_TEXT_ITEM_INNER_LINE_SIZE_INC GRID_TEXT_ITEM_INNER_LINE_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "item_inner_bg"; }
               rel2 { relative: 0.0 0.0; to: "item_inner_bg"; }
            }
         }
         part { name: "item_bg_bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_TEXT_ITEM_INNER_LINE_SIZE_INC GRID_TEXT_ITEM_INNER_LINE_SIZE_INC;
               max: GRID_TEXT_ITEM_INNER_LINE_SIZE_INC GRID_TEXT_ITEM_INNER_LINE_SIZE_INC;
               rel1 { relative: 1.0 1.0; to: "item_inner_bg"; }
               rel2 { relative: 1.0 1.0; to: "item_inner_bg"; }
            }
         }
         part { name: "item_bg";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "item_bg_top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "item_bg_bottom_right_padding"; }
               color: 242 237 213 255;
               image.normal: "B12_memo_bg.#.png";
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "text_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: GRID_TEXT_ITEM_LEFT_PADDING_INC GRID_TEXT_ITEM_TOP_PADDING_INC;
               max: GRID_TEXT_ITEM_LEFT_PADDING_INC GRID_TEXT_ITEM_TOP_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "item_outer_bg"; }
               rel2 { relative: 0.0 0.0; to: "item_outer_bg"; }
            }
         }
         part { name: "text_bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_TEXT_ITEM_LEFT_PADDING_INC GRID_TEXT_ITEM_TOP_PADDING_INC;
               max: GRID_TEXT_ITEM_LEFT_PADDING_INC GRID_TEXT_ITEM_TOP_PADDING_INC;
               rel1 { relative: 1.0 1.0; to: "item_outer_bg"; }
               rel2 { relative: 1.0 1.0; to: "item_outer_bg"; }
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               text {
                  style: "clipboard_01_style";
                  align: 0.0 0.0;
               }
               rel1 { relative: 1.0 1.0; to: "text_top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "text_bottom_right_padding"; }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "clipboard_01_style_pressed";
                  align: 0.0 0.0;
               }
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "elm.rect.dim";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 0 0 0 200;
               rel1.to: "item_bg";
               rel2.to: "item_bg";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "icon_lock/img";
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1 { relative: 0.5 0.5; to: "item_bg"; }
               rel2 { relative: 0.5 0.5; to: "item_bg"; }
               align: 0.5 0.5;
               fixed: 1 1;
               min: GRID_ITEM_LOCK_BTN_SIZE_INC;
               max: GRID_ITEM_LOCK_BTN_SIZE_INC;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_icon_lock.png";
               }
            }
         }
         part { name: "delbtn_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_ITEM_DELETE_BTN_TOP_PADDING_INC GRID_ITEM_DELETE_BTN_TOP_PADDING_INC;
               max: GRID_ITEM_DELETE_BTN_TOP_PADDING_INC GRID_ITEM_DELETE_BTN_TOP_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "item_outer_bg"; }
               rel2 { relative: 0.0 0.0; to: "item_outer_bg"; }
            }
         }
         part { name: "delbtn";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "delbtn_top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "delbtn_top_left_padding"; }
               align: 0.0 0.0;
               fixed: 1 1;
               min: GRID_ITEM_DELETE_BTN_SIZE_INC;
               max: GRID_ITEM_DELETE_BTN_SIZE_INC;
            }
         }
         part { name: "delbtn/img";
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1.to: "delbtn";
               rel2.to: "delbtn";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_button_delete.png";
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_button_delete_press.png";
               }
            }
         }
      }
      programs {
         program { name: "selected";
            signal: "elm,state,selected";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
   //            if (!strcmp(st, "default"))
//                  run_program(PROGRAM:"vi_pressed");
            }
         }
         program { name: "unselected";
            signal: "elm,state,unselected";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
   //            if (!strcmp(st, "default"))
//                  run_program(PROGRAM:"vi_zoom_out");
            }
         }
         /*GENGRID_PROGRAM_ITEM_SELECT_VI_EFFECT(
            target: "bg";
            target: "item_outer_bg";
            target: "item_inner_bg";
            target: "item_bg";
            target: "elm.text";
         )*/
         program { name: "mouse_down";
            signal: "mouse,down,1";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "show"))
                  set_state(PART:"delbtn/img", "pressed", 0.0);
            }
         }
         program { name: "mouse_out";
            signal: "mouse,out";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "pressed"))
                  set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "mouse_up";
            signal: "mouse,up,1";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "pressed"))
                  set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "play_sound_delbtn";
            signal: "mouse,clicked,1";
            source: "delbtn/img";
            action: PLAY_SAMPLE "touch_sound" 1.0;
         }
         program { name: "play_sound_item";
            signal: "mouse,clicked,1";
            source: "item_outer_bg";
            script {
               new st[31], st2[31];
               new Float:vl, Float:vl2;
               get_state(PART:"delbtn/img", st, 30, vl);
               get_state(PART:"elm.rect.dim", st2, 30, vl2);
               if (!strcmp(st, "default") && !strcmp(st2, "default"))
                  play_sample("touch_sound", 1.0);
            }
         }
         program { name: "show_lock_icon";
            source: "elm";
            signal: "elm,state,show,lockicon";
            script {
               set_state(PART:"icon_lock/img", "show", 0.0);
            }
         }
         program { name: "hide_lock_icon";
            source: "elm";
            signal: "elm,state,hide,lockicon";
            script {
               set_state(PART:"icon_lock/img", "hide", 0.0);
            }
         }
         program { name: "show_delbtn";
            source: "elm";
            signal: "elm,state,show,delbtn";
            script {
               set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "hide_delbtn";
            source: "elm";
            signal: "elm,state,hide,delbtn";
            script {
               set_state(PART:"delbtn/img", "default", 0.0);
            }
         }
         program { name: "show_dim";
            source: "elm";
            signal: "elm,state,show,dim";
            action: STATE_SET "show" 0.0;
            target: "elm.rect.dim";
         }
         program { name: "hide_dim";
            source: "elm";
            signal: "elm,state,hide,dim";
            action: STATE_SET "default" 0.0;
            target: "elm.rect.dim";
         }
      }
   }

   group { name: "elm/gengrid/item/clipboard/combined_style/default";
      data.item: "texts" "elm.text";
      data.item: "contents" "elm.swallow.content";

      images {
         image: "B12_memo_bg.#.png" COMP;
         image: "B12_memo_bg_line.#.png" COMP;
         image: "B12_button_delete.png" COMP;
         image: "B12_button_delete_press.png" COMP;
         image: "B12_icon_lock.png" COMP;
      }

      styles {
         style { name: "clipboard_02_style";
            base: "font=Tizen:style=Regular font_size=26 color=#070707FF align=left wrap=mixed text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "clipboard_02_style_pressed";
            base: "font=Tizen:style=Regular font_size=26 color=#070707FF align=left wrap=mixed text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }

      parts {
         part { name: "persp";
            type: RECT;
            description { state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               fixed: 1 1;
               align: 0.5 0.5;
               color: 0 0 0 0;
               visible: 1;
               perspective {
                  zplane: -70;
                  focal: 1000;
               }
            }
         }
         part { name: "persp1";
            type: RECT;
            description { state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               fixed: 1 1;
               align: 0.5 0.5;
               color: 0 0 0 0;
               visible: 1;
               perspective {
                  zplane: 0;
                  focal: 1000;
               }
            }
         }
         part { name: "bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: GRID_TEXT_ITEM_BG_LEFT_PADDING_INC GRID_TEXT_ITEM_BG_TOP_PADDING_INC;
               max: GRID_TEXT_ITEM_BG_LEFT_PADDING_INC GRID_TEXT_ITEM_BG_TOP_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "bg"; }
               rel2 { relative: 0.0 0.0; to: "bg"; }
            }
         }
         part { name: "bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_TEXT_ITEM_BG_RIGHT_PADDING_INC GRID_TEXT_ITEM_BG_BOTTOM_PADDING_INC;
               max: GRID_TEXT_ITEM_BG_RIGHT_PADDING_INC GRID_TEXT_ITEM_BG_BOTTOM_PADDING_INC;
               rel1 { relative: 1.0 1.0; to: "bg"; }
               rel2 { relative: 1.0 1.0; to: "bg"; }
            }
         }
         part { name: "item_outer_bg";
            type: RECT;
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 1.0; to: "top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "bottom_right_padding"; }
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "item_inner_bg_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               max: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "item_outer_bg"; }
               rel2 { relative: 0.0 0.0; to: "item_outer_bg"; }
            }
         }
         part { name: "item_inner_bg_bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               max: GRID_ITEM_OUTER_LINE_SIZE_INC GRID_ITEM_OUTER_LINE_SIZE_INC;
               rel1 { relative: 1.0 1.0; to: "item_outer_bg"; }
               rel2 { relative: 1.0 1.0; to: "item_outer_bg"; }
            }
         }
         part { name: "item_inner_bg";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 1.0; to: "item_inner_bg_top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "item_inner_bg_bottom_right_padding"; }
               color: 250 250 250 255;
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "item_bg_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: GRID_TEXT_ITEM_INNER_LINE_SIZE_INC GRID_TEXT_ITEM_INNER_LINE_SIZE_INC;
               max: GRID_TEXT_ITEM_INNER_LINE_SIZE_INC GRID_TEXT_ITEM_INNER_LINE_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "item_inner_bg"; }
               rel2 { relative: 0.0 0.0; to: "item_inner_bg"; }
            }
         }
         part { name: "item_bg_bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_TEXT_ITEM_INNER_LINE_SIZE_INC GRID_TEXT_ITEM_INNER_LINE_SIZE_INC;
               max: GRID_TEXT_ITEM_INNER_LINE_SIZE_INC GRID_TEXT_ITEM_INNER_LINE_SIZE_INC;
               rel1 { relative: 1.0 1.0; to: "item_inner_bg"; }
               rel2 { relative: 1.0 1.0; to: "item_inner_bg"; }
            }
         }
         part { name: "item_bg";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "item_bg_top_left_padding"; }
               rel2 { relative: 0.0 0.0; to: "item_bg_bottom_right_padding"; }
               color: 243 237 213 255;
               image.normal: "B12_memo_bg.#.png";
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "content_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: GRID_COMBINED_ITEM_LEFT_PADDING_INC GRID_COMBINED_ITEM_TOP_PADDING_INC;
               max: GRID_COMBINED_ITEM_LEFT_PADDING_INC GRID_COMBINED_ITEM_TOP_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "item_outer_bg"; }
               rel2 { relative: 0.0 0.0; to: "item_outer_bg"; }
            }
         }
         part { name: "text_bottom_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_COMBINED_ITEM_LEFT_PADDING_INC GRID_COMBINED_ITEM_TOP_PADDING_INC;
               max: GRID_COMBINED_ITEM_LEFT_PADDING_INC GRID_COMBINED_ITEM_TOP_PADDING_INC;
               rel1 { relative: 1.0 1.0; to: "item_outer_bg"; }
               rel2 { relative: 1.0 1.0; to: "item_outer_bg"; }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               max: GRID_COMBINED_ITEM_W_INC GRID_COMBINED_ITEM_IMAGE_H_INC;
               rel1 { relative: 1.0 1.0; to: "content_top_left_padding"; }
               rel2 { relative: 1.0 1.0; to: "content_top_left_padding"; }
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "separator_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 0 GRID_COMBINED_ITEM_PADDING_INC;
               max: -1 GRID_COMBINED_ITEM_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.content"; }
               rel2 { relative: 0.0 1.0; to_x: "text_bottom_right_padding";  to_y: "elm.swallow.content"; }
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               text {
                  style: "clipboard_02_style";
                  align: 0.0 0.0;
               }
               rel1 { relative: 0.0 1.0; to: "separator_padding"; }
               rel2 { relative: 0.0 0.0; to: "text_bottom_right_padding"; }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "clipboard_02_style_pressed";
                  align: 0.0 0.0;
               }
               GENGRID_ITEM_SELECT_VI_EFFECT
            }
         }
         part { name: "elm.rect.dim";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 0 0 0 200;
               rel1.to: "item_bg";
               rel2.to: "item_bg";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "icon_lock/img";
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1 { relative: 0.5 0.5; to: "item_bg"; }
               rel2 { relative: 0.5 0.5; to: "item_bg"; }
               align: 0.5 0.5;
               fixed: 1 1;
               min: GRID_ITEM_LOCK_BTN_SIZE_INC;
               max: GRID_ITEM_LOCK_BTN_SIZE_INC;
               visible: 0;
            }
           description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_icon_lock.png";
               }
           }
         }
         part { name: "delbtn_top_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 1.0;
               min: GRID_ITEM_DELETE_BTN_TOP_PADDING_INC GRID_ITEM_DELETE_BTN_TOP_PADDING_INC;
               max: GRID_ITEM_DELETE_BTN_TOP_PADDING_INC GRID_ITEM_DELETE_BTN_TOP_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "item_outer_bg"; }
               rel2 { relative: 0.0 0.0; to: "item_outer_bg"; }
            }
         }
         part { name: "delbtn";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 1.0; to: "delbtn_top_left_padding"; }
               rel2 { relative: 0.0 1.0; to: "delbtn_top_left_padding"; }
               align: 0.0 0.0;
               fixed: 1 1;
               min: GRID_ITEM_DELETE_BTN_SIZE_INC;
               max: GRID_ITEM_DELETE_BTN_SIZE_INC;
            }
         }
         part { name: "delbtn/img";
            scale: 1;
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1.to: "delbtn";
               rel2.to: "delbtn";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_button_delete.png";
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image {
                  normal: "B12_button_delete_press.png";
               }
            }
         }
      }
      programs {
         program { name: "selected";
            signal: "elm,state,selected";
            source: "elm";
            script {
               new st[31], st2[31];
               new Float:vl, Float:vl2;
               get_state(PART:"delbtn/img", st, 30, vl);
               get_state(PART:"elm.rect.dim", st2, 30, vl2);
  //             if (!strcmp(st, "default") && !strcmp(st2, "default"))
//                  run_program(PROGRAM:"vi_pressed");
            }
         }
         program { name: "unselected";
            signal: "elm,state,unselected";
            source: "elm";
            script {
               new st[31], st2[31];
               new Float:vl, Float:vl2;
               get_state(PART:"delbtn/img", st, 30, vl);
               get_state(PART:"elm.rect.dim", st2, 30, vl2);
   //            if (!strcmp(st, "default") && !strcmp(st2, "default"))
//                  run_program(PROGRAM:"vi_zoom_out");
            }
         }
 /*        GENGRID_PROGRAM_ITEM_SELECT_VI_EFFECT(
            target: "bg";
            target: "item_outer_bg";
            target: "item_inner_bg";
            target: "item_bg";
            target: "elm.swallow.content";
            target: "elm.text";
         )*/
         program { name: "mouse_down";
            signal: "mouse,down,1";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "show"))
                  set_state(PART:"delbtn/img", "pressed", 0.0);
            }
         }
         program { name: "mouse_out";
            signal: "mouse,out";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "pressed"))
                  set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "mouse_up";
            signal: "mouse,up,1";
            source: "delbtn/img";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"delbtn/img", st, 30, vl);
               if (!strcmp(st, "pressed"))
                  set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "play_sound_delbtn";
            signal: "mouse,clicked,1";
            source: "delbtn/img";
            action: PLAY_SAMPLE "touch_sound" 1.0;
         }
         program { name: "play_sound_item";
            signal: "mouse,clicked,1";
            source: "item_outer_bg";
            script {
               new st[31], st2[31];
               new Float:vl, Float:vl2;
               get_state(PART:"delbtn/img", st, 30, vl);
               get_state(PART:"elm.rect.dim", st2, 30, vl2);
               if (!strcmp(st, "default") && !strcmp(st2, "default"))
                  play_sample("touch_sound", 1.0);
            }
         }
         program { name: "show_lock_icon";
            source: "elm";
            signal: "elm,state,show,lockicon";
            script {
               set_state(PART:"icon_lock/img", "show", 0.0);
            }
         }
         program { name: "hide_lock_icon";
            source: "elm";
            signal: "elm,state,hide,lockicon";
            script {
               set_state(PART:"icon_lock/img", "hide", 0.0);
            }
         }
         program { name: "show_delbtn";
            source: "elm";
            signal: "elm,state,show,delbtn";
            script {
               set_state(PART:"delbtn/img", "show", 0.0);
            }
         }
         program { name: "hide_delbtn";
            source: "elm";
            signal: "elm,state,hide,delbtn";
            script {
               set_state(PART:"delbtn/img", "default", 0.0);
            }
         }
         program { name: "show_dim";
            source: "elm";
            signal: "elm,state,show,dim";
            action: STATE_SET "show" 0.0;
            target: "elm.rect.dim";
         }
         program { name: "hide_dim";
            source: "elm";
            signal: "elm,state,hide,dim";
            action: STATE_SET "default" 0.0;
            target: "elm.rect.dim";
         }
      }
   }
}
